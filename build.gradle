buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:5.1.+'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.8.10'
    id "io.github.p03w.machete" version "1.+"
    id "com.github.johnrengelman.shadow" version "7.1.2"

}

apply plugin: 'net.minecraftforge.gradle'

version = '2.0'
group = 'com.palorder.smp.java'
archivesBaseName = 'PalorderSMP'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
compileKotlin {
    kotlinOptions.jvmTarget = "17" // Ensure the Kotlin code targets Java 17
}
minecraft {
    mappings channel: 'official', version: '1.18.2'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                palordersmp {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                palordersmp {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources.srcDirs = ['src/generated/resources', 'src/main/resources']


repositories {
    mavenCentral()
    maven { url = "https://maven.minecraftforge.net/" }
    maven { // Create Forge and Registrate Forge
        url = "https://maven.tterrag.com/"
        content {
            includeGroup("com.tterrag.registrate")
            includeGroup("com.simibubi.create")
        }
    }
    maven { url = "https://libraries.minecraft.net/" } // Additional mods
}

dependencies {
    minecraft "net.minecraftforge:forge:1.18.2-40.2.21"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.10"
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs.add('--add-opens=java.base/java.lang=ALL-UNNAMED')
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes(
                "Specification-Title": "PalorderCorporationSMP",
                "Specification-Vendor": "PalorderCorporationSMPIsMadeByPalorderCorporation",
                "Specification-Version": "1.0",
                "Implementation-Title": "${project.name}",
                "Implementation-Version": "${project.version}",
                "Implementation-Vendor": "PalorderCorporation",
                "Automatic-Module-Name": "${project.name.toLowerCase()}"
        )
    }
}


tasks.shadowJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    exclude 'com/palorder/smp/kotlin/client/PalorderSMPMainClientkotlin$Companion.class'
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
