buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.7.10'
}

apply plugin: 'net.minecraftforge.gradle'

version = '1.0'
group = 'com.palorder.smp'
archivesBaseName = 'PalorderSMP'

// Specify Java 17 as the target version
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty('java.version')}, JVM: ${System.getProperty('java.vm.version')} (${System.getProperty('java.vendor')}), Arch: ${System.getProperty('os.arch')}"

minecraft {
    mappings channel: 'official', version: '1.18.2'

    runs {
        // Define client run configuration
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'palordersmp'
            mods { palordersmp { source sourceSets.main } }
        }

        // Define server run configuration
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'palordersmp'
            mods { palordersmp { source sourceSets.main } }
        }

        // Define game test server run configuration
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'palordersmp'
            mods { palordersmp { source sourceSets.main } }
        }

        // Define data generation run configuration
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'palordersmp', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods { palordersmp { source sourceSets.main } }
        }
    }
}

// Include generated resources
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral() // Main repository for dependencies
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.2.21'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.7.10"
}

// Configure jar manifest attributes
jar {
    manifest {
        attributes([
                "Specification-Title"     : "PalorderCorporationSMP",
                "Specification-Vendor"    : "PalorderCorporationSMPIsMadeByPalorderCorporation",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "Implementation-Vendor"   : "PalorderCorporation",
                "Implementation-Timestamp" : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Set UTF-8 encoding for Java compilation
}
